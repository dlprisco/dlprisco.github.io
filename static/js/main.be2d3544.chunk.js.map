{"version":3,"sources":["logo.svg","assets/myImage.jpg","Nav.js","Header.jsx","GameComponent.js","Sections.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Nav","useEffect","handleScroll","navbar","document","getElementById","scrollPos","window","scrollY","style","top","addEventListener","removeEventListener","React","createElement","Fragment","id","className","href","width","height","viewBox","fill","xmlns","x","y","rx","cx","cy","r","stroke","strokeWidth","points","transform","Header","canvasRef","useRef","randomColor","setRandomColor","useState","canvas","current","ctx","getContext","angulo","velocidades","color","i","Math","floor","random","getRandomColor","dibujar","clearRect","translate","beginPath","arc","PI","lineWidth","strokeStyle","baseRotation","k","cornerAngle","save","rotate","size","rect","restore","resetTransform","requestAnimationFrame","role","aria-label","ref","DodgeTheCreeps","requestRef","restartCounter","setRestartCounter","player","radius","speed","keysPressed","activeTouch","mobs","lastSpawnTime","gameOver","startTime","Date","now","score","keyDownHandler","e","key","keyUpHandler","touchStartHandler","preventDefault","touch","touches","getBoundingClientRect","clientX","left","clientY","touchMoveHandler","touchEndHandler","passive","detectCollisions","forEach","mob","distance","ax","ay","bx","by","hypot","drawScore","fillStyle","font","fillText","gameLoop","timestamp","fillRect","spawnMob","edge","push","updatePlayer","lerpFactor","dx","dy","angle","atan2","cos","sin","closePath","cancelAnimationFrame","textAlign","onClick","handleReset","prev","marginBottom","padding","fontSize","cursor","border","background","display","margin","Sections","src","alt","class","App","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.be2d3544.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","module.exports = __webpack_public_path__ + \"static/media/myImage.9b4f3057.jpg\";","// Nav.js\r\nimport React, { useEffect } from 'react';\r\nimport './Nav.css';\r\n\r\nfunction Nav() {\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const navbar = document.getElementById('navbar');\r\n      const scrollPos = window.scrollY;\r\n      const revealPoint = 60; // Umbral en px para que la navbar quede fija\r\n\r\n      if (scrollPos < revealPoint) {\r\n        // Mientras el scroll sea menor a revealPoint, mueve la navbar proporcionalmente\r\n        navbar.style.top = (-revealPoint + scrollPos) + 'px';\r\n      } else {\r\n        // Cuando supera el umbral, fija la navbar arriba\r\n        navbar.style.top = '0';\r\n      }\r\n    };\r\n\r\n    // Agrega el listener al evento scroll\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    // Limpieza: remueve el listener cuando el componente se desmonte\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <nav id=\"navbar\" className=\"navbar navbar-default navbar-shrink\">\r\n        <div className=\"container\">\r\n          <a className=\"navbar-brand page-scroll\" href=\"#page-top\">\r\n            <svg\r\n              width=\"30\"\r\n              height=\"30\"\r\n              viewBox=\"0 0 30 30\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              {/* Fondo: Cuadrado gris */}\r\n              <rect x=\"2\" y=\"2\" width=\"26\" height=\"26\" rx=\"5\" fill=\"#808080\" />\r\n              {/* Círculo sin relleno, contorno azul fosforecente */}\r\n              <circle cx=\"10\" cy=\"10\" r=\"4\" fill=\"none\" stroke=\"#00FFFF\" strokeWidth=\"2\" />\r\n              {/* Triángulo sin relleno, contorno azul fosforecente */}\r\n              <polygon points=\"20,5 27,15 13,15\" fill=\"none\" stroke=\"#00FFFF\" strokeWidth=\"2\" />\r\n              {/* Rectángulo rotado sin relleno, contorno azul fosforecente */}\r\n              <rect\r\n                x=\"7\"\r\n                y=\"18\"\r\n                width=\"6\"\r\n                height=\"4\"\r\n                fill=\"none\"\r\n                stroke=\"#00FFFF\"\r\n                strokeWidth=\"2\"\r\n                transform=\"rotate(15 10 20)\"\r\n              />\r\n            </svg>\r\n            Daniel Prisco\r\n          </a>\r\n          <div className=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\"></div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nfunction Header() {\r\n  const canvasRef = useRef(null);\r\n  const [randomColor, setRandomColor] = useState(\"#00F0FF\");\r\n\r\n  useEffect(() => {\r\n    function getRandomColor() {\r\n      const letters = \"0123456789ABCDEF\";\r\n      let color = \"#\";\r\n      for (let i = 0; i < 6; i++) {\r\n        color += letters[Math.floor(Math.random() * 16)];\r\n      }\r\n      return color;\r\n    }\r\n    \r\n  const canvas = canvasRef.current;\r\n  const ctx = canvas.getContext(\"2d\");\r\n\r\n  // Asignamos las dimensiones del canvas\r\n  canvas.width = 500;\r\n  canvas.height = 500;\r\n\r\n  let angulo = 0;\r\n  // Velocidades individuales para la rotación de cada cuadrado\r\n  let velocidades = [0.8, -1, 0.2, -0.06, 3];\r\n\r\n\r\n  function dibujar() {\r\n    // Limpiamos el canvas\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    // Trasladamos el origen al centro del canvas\r\n    ctx.translate(canvas.width / 2, canvas.height / 2);\r\n\r\n    // -----------------------------------------------\r\n    // 1. Dibujar el círculo completo en un tono azul claro\r\n    // -----------------------------------------------\r\n    ctx.beginPath();\r\n    ctx.arc(0, 0, 130, 0, Math.PI * 2);\r\n    ctx.lineWidth = 4;\r\n    ctx.strokeStyle = \"#ADD8E6\"; // Tono azul claro\r\n    ctx.stroke();\r\n\r\n    // -----------------------------------------------\r\n    // 2. Dibujar arcos en las \"esquinas\" del círculo\r\n    // -----------------------------------------------\r\n    // Usamos la rotación del primer cuadrado como referencia:\r\n    let baseRotation = angulo * velocidades[4];\r\n    // delta define la amplitud de cada arco (en radianes)\r\n    const delta = 0.5;\r\n    // Se dibujan 4 arcos, uno por cada \"esquina\"\r\n    for (let k = 0; k < 4; k++) {\r\n      let cornerAngle = baseRotation + Math.PI / 4 + k * (Math.PI / 2);\r\n      ctx.beginPath();\r\n      ctx.arc(0, 0, 130, cornerAngle, cornerAngle + delta);\r\n      ctx.lineWidth = 4;\r\n      ctx.strokeStyle = \"#0F4C81\"; // Azul metalizado oscuro\r\n      ctx.stroke();\r\n    }\r\n\r\n    // -----------------------------------------------\r\n    // 3. Dibujar tres cuadrados con rotación individual\r\n    // -----------------------------------------------\r\n    for (let i = 0; i < 3; i++) {\r\n      ctx.save();\r\n      ctx.rotate(angulo * velocidades[i]);\r\n      ctx.beginPath();\r\n      let size = (3 - i) * 60; // Tamaño del cuadrado (de mayor a menor)\r\n      ctx.rect(-size / 2, -size / 2, size, size);\r\n      ctx.lineWidth = 3;\r\n      ctx.strokeStyle = \"#0F4C81\"; // Azul metalizado oscuro\r\n      ctx.stroke();\r\n      ctx.restore();\r\n    }\r\n\r\n    // Restaura el contexto para el siguiente frame\r\n    ctx.resetTransform();\r\n\r\n    // Incrementa el ángulo para la animación\r\n    angulo += 0.02;\r\n    requestAnimationFrame(dibujar);\r\n  }\r\n  setRandomColor(getRandomColor());\r\n  dibujar();\r\n}, []);\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"header-container\">\r\n        {/* Sección izquierda: Texto */}\r\n        <div className=\"intro-text\">\r\n          <div className=\"intro-heading\">\r\n            <h1>Hola mi nombre es Daniel Prisco. Soy nuevo en la programación y diseño web.</h1>\r\n          </div>\r\n\r\n          <div className=\"intro-lead-in\" style={{ \"--random-color\": randomColor }}>\r\n      Python • C++ • Java • SQL • JavaScript • CSS • HTML\r\n    </div>\r\n          <div className=\"opaque-square\">\r\n          <p>\r\n          \t<span role=\"img\" aria-label=\"emoticon\">🎯</span> me gusta realizar diferentes practicas y resolver acertijos de codigo abierto durante mis tiempos libres. \r\n          </p>\r\n        </div>\r\n        </div>\r\n        {/* Sección derecha: Canvas con animación */}\r\n        <div className=\"canvas-section\">\r\n          <canvas ref={canvasRef} id=\"miCanvas\"></canvas>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\n\r\nconst DodgeTheCreeps = () => {\r\n  const canvasRef = useRef(null);\r\n  const requestRef = useRef();\r\n  const [restartCounter, setRestartCounter] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    canvas.width = 800;\r\n    canvas.height = 600;\r\n\r\n    // Variables iniciales del juego\r\n    const player = {\r\n      x: canvas.width / 2,\r\n      y: canvas.height / 2,\r\n      radius: 15,\r\n      speed: 4,\r\n    };\r\n    // Variables para control de teclado y toques\r\n    const keysPressed = {};\r\n    let activeTouch = null;\r\n\r\n    // Configuración de enemigos (\"creeps\")\r\n    const mobs = [];\r\n    const mobSpeed = 2;\r\n    const mobRadius = 10;\r\n    const spawnInterval = 2000; // Intervalo de aparición en milisegundos\r\n    let lastSpawnTime = 0;\r\n    let gameOver = false;\r\n    const startTime = Date.now();\r\n    let score = 0;\r\n\r\n    // Eventos de teclado\r\n    const keyDownHandler = (e) => {\r\n      keysPressed[e.key] = true;\r\n    };\r\n    const keyUpHandler = (e) => {\r\n      keysPressed[e.key] = false;\r\n    };\r\n    document.addEventListener(\"keydown\", keyDownHandler);\r\n    document.addEventListener(\"keyup\", keyUpHandler);\r\n\r\n    // Eventos táctiles para móviles\r\n    const touchStartHandler = (e) => {\r\n      e.preventDefault();\r\n      const touch = e.touches[0];\r\n      const rect = canvas.getBoundingClientRect();\r\n      activeTouch = {\r\n        x: touch.clientX - rect.left,\r\n        y: touch.clientY - rect.top,\r\n      };\r\n    };\r\n    const touchMoveHandler = (e) => {\r\n      e.preventDefault();\r\n      const touch = e.touches[0];\r\n      const rect = canvas.getBoundingClientRect();\r\n      activeTouch = {\r\n        x: touch.clientX - rect.left,\r\n        y: touch.clientY - rect.top,\r\n      };\r\n    };\r\n    const touchEndHandler = (e) => {\r\n      e.preventDefault();\r\n      activeTouch = null;\r\n    };\r\n    canvas.addEventListener(\"touchstart\", touchStartHandler, { passive: false });\r\n    canvas.addEventListener(\"touchmove\", touchMoveHandler, { passive: false });\r\n    canvas.addEventListener(\"touchend\", touchEndHandler, { passive: false });\r\n    canvas.addEventListener(\"touchcancel\", touchEndHandler, { passive: false });\r\n\r\n    // Utilidad para calcular la distancia entre dos puntos\r\n    const distance = (ax, ay, bx, by) => Math.hypot(bx - ax, by - ay);\r\n\r\n    // Función para generar un enemigo en un borde aleatorio\r\n    const spawnMob = () => {\r\n      let x, y;\r\n      const edge = Math.floor(Math.random() * 4); // 0: arriba, 1: derecha, 2: abajo, 3: izquierda\r\n      if (edge === 0) {\r\n        x = Math.random() * canvas.width;\r\n        y = -mobRadius;\r\n      } else if (edge === 1) {\r\n        x = canvas.width + mobRadius;\r\n        y = Math.random() * canvas.height;\r\n      } else if (edge === 2) {\r\n        x = Math.random() * canvas.width;\r\n        y = canvas.height + mobRadius;\r\n      } else {\r\n        x = -mobRadius;\r\n        y = Math.random() * canvas.height;\r\n      }\r\n      mobs.push({ x, y });\r\n    };\r\n\r\n    // Actualización del jugador: usa teclado o movimiento táctil (si hay toque activo)\r\n    const updatePlayer = () => {\r\n      if (activeTouch) {\r\n        const lerpFactor = 0.2; // Factor de interpolación para un movimiento suave\r\n        player.x += (activeTouch.x - player.x) * lerpFactor;\r\n        player.y += (activeTouch.y - player.y) * lerpFactor;\r\n      } else {\r\n        if (keysPressed[\"ArrowUp\"] || keysPressed[\"w\"]) player.y -= player.speed;\r\n        if (keysPressed[\"ArrowDown\"] || keysPressed[\"s\"]) player.y += player.speed;\r\n        if (keysPressed[\"ArrowLeft\"] || keysPressed[\"a\"]) player.x -= player.speed;\r\n        if (keysPressed[\"ArrowRight\"] || keysPressed[\"d\"]) player.x += player.speed;\r\n      }\r\n\r\n      // Evitar que el jugador salga del área de juego\r\n      if (player.x < player.radius) player.x = player.radius;\r\n      if (player.x > canvas.width - player.radius) player.x = canvas.width - player.radius;\r\n      if (player.y < player.radius) player.y = player.radius;\r\n      if (player.y > canvas.height - player.radius) player.y = canvas.height - player.radius;\r\n    };\r\n\r\n    // Movimiento de los enemigos hacia el jugador\r\n    const updateMobs = () => {\r\n      mobs.forEach((mob) => {\r\n        const dx = player.x - mob.x;\r\n        const dy = player.y - mob.y;\r\n        const angle = Math.atan2(dy, dx);\r\n        mob.x += Math.cos(angle) * mobSpeed;\r\n        mob.y += Math.sin(angle) * mobSpeed;\r\n      });\r\n    };\r\n\r\n    // Detección de colisiones entre el jugador y los enemigos\r\n    const detectCollisions = () => {\r\n      mobs.forEach((mob) => {\r\n        if (distance(player.x, player.y, mob.x, mob.y) < player.radius + mobRadius)\r\n          gameOver = true;\r\n      });\r\n    };\r\n\r\n    // Dibuja al jugador (círculo verde)\r\n    const drawPlayer = () => {\r\n      ctx.beginPath();\r\n      ctx.arc(player.x, player.y, player.radius, 0, Math.PI * 2);\r\n      ctx.fillStyle = \"#00FF00\";\r\n      ctx.fill();\r\n      ctx.closePath();\r\n    };\r\n\r\n    // Dibuja a los enemigos (círculos rojos)\r\n    const drawMobs = () => {\r\n      mobs.forEach((mob) => {\r\n        ctx.beginPath();\r\n        ctx.arc(mob.x, mob.y, mobRadius, 0, Math.PI * 2);\r\n        ctx.fillStyle = \"#FF0000\";\r\n        ctx.fill();\r\n        ctx.closePath();\r\n      });\r\n    };\r\n\r\n    // Dibuja la puntuación en pantalla\r\n    const drawScore = () => {\r\n      ctx.fillStyle = \"#fff\";\r\n      ctx.font = \"20px Arial\";\r\n      ctx.fillText(\"Score: \" + score, 10, 30);\r\n    };\r\n\r\n    // Dibuja la pantalla de Game Over\r\n    const drawGameOver = () => {\r\n      ctx.fillStyle = \"rgba(0, 0, 0, 0.7)\";\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n      ctx.fillStyle = \"#fff\";\r\n      ctx.font = \"40px Arial\";\r\n      ctx.fillText(\"Game Over\", canvas.width / 2 - 100, canvas.height / 2);\r\n    };\r\n\r\n    // Bucle principal del juego\r\n    const gameLoop = (timestamp) => {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      if (gameOver) {\r\n        drawGameOver();\r\n        drawScore();\r\n        return;\r\n      }\r\n\r\n      // Controla la aparición de nuevos enemigos\r\n      if (timestamp - lastSpawnTime > spawnInterval) {\r\n        spawnMob();\r\n        lastSpawnTime = timestamp;\r\n      }\r\n\r\n      updatePlayer();\r\n      updateMobs();\r\n      detectCollisions();\r\n\r\n      score = Math.floor((Date.now() - startTime) / 1000);\r\n\r\n      drawPlayer();\r\n      drawMobs();\r\n      drawScore();\r\n\r\n      requestRef.current = requestAnimationFrame(gameLoop);\r\n    };\r\n\r\n    requestRef.current = requestAnimationFrame(gameLoop);\r\n\r\n    // Limpieza de eventos y animación al desmontar o resetear el componente\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", keyDownHandler);\r\n      document.removeEventListener(\"keyup\", keyUpHandler);\r\n      canvas.removeEventListener(\"touchstart\", touchStartHandler);\r\n      canvas.removeEventListener(\"touchmove\", touchMoveHandler);\r\n      canvas.removeEventListener(\"touchend\", touchEndHandler);\r\n      canvas.removeEventListener(\"touchcancel\", touchEndHandler);\r\n      cancelAnimationFrame(requestRef.current);\r\n    };\r\n  }, [restartCounter]);\r\n\r\n  const handleReset = () => {\r\n    // Al presionar el botón se incrementa el contador, lo que reinicia el useEffect\r\n    setRestartCounter((prev) => prev + 1);\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <h1>Dodge The Creeps</h1>\r\n      <button\r\n        onClick={handleReset}\r\n        style={{\r\n          marginBottom: \"10px\",\r\n          padding: \"8px 16px\",\r\n          fontSize: \"16px\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        Reset\r\n      </button>\r\n      <canvas\r\n        ref={canvasRef}\r\n        style={{\r\n          border: \"2px solid #fff\",\r\n          background: \"#222\",\r\n          display: \"block\",\r\n          margin: \"0 auto\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DodgeTheCreeps;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport \"./Sections.css\";\r\nimport myImage from \"./assets/myImage.jpg\";\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\nimport DodgeTheCreeps from \"./GameComponent\";\r\n\r\nfunction Sections() {\r\n\r\n  return (\r\n    <div className=\"sections-container\">\r\n      {/* Sección 1 */}\r\n      <section className=\"section-one\">\r\n        <h2 className=\"section-title\">About Me</h2>\r\n        <div className=\"header-container\">\r\n\r\n          <div className=\"subsections-description\">\r\n            <div className=\"grey-border-section\">\r\n              <p>Venezuela, San Cristóbal 2001 🔥</p>\r\n              <p>Nací en San Cristóbal y tengo 24 años. Me interesa seguir estudiando ingeniería informática y telecomunicaciones.</p>\r\n            </div>\r\n            <div className=\"grey-border-section\">\r\n              <p>Enfoque 🎯</p>\r\n              <p>Me gustaría especializarme en desarrollo web, blockchain y animaciones 3D en videojuegos.</p>\r\n            </div>\r\n            <div className=\"grey-border-section\">\r\n              <h5>👍 Aspectos Positivos</h5>\r\n              <ul>\r\n                <li>👪 Trabajo en equipo fácilmente</li>\r\n                <li>🏅 Ambiente 100% remoto</li>\r\n                <li>📌 Compilar, ejecutar y probar código</li>\r\n                <li>🍉 Uso herramientas como Chat-GPT</li>\r\n                <li>💢 Administrador de redes sociales</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Sección 2 */}\r\n      <section className=\"section-t\">\r\n        <div className=\"title-container\">\r\n          <ul className=\"suggestion-list\">\r\n            <li className=\"suggestion\">\r\n              <h4 className=\"text\">Q&A support</h4>\r\n              <img className=\"imgembed\" src=\"https://es.stackoverflow.com/users/flair/327285.png\"\r\n                alt=\"Perfil en Stack Overflow\" />\r\n            </li>\r\n            <li className=\"suggestion\">\r\n              <h5>Social Networks 👨‍💻</h5>\r\n              <p><i class=\"bi bi-youtube\"></i><a href=\"https://www.youtube.com/@dlprisco\">@dlprisco</a></p>\r\n              <p><i class=\"bi bi-facebook\"></i><a href=\"https://www.facebook.com/profile.php?id=100092658256294\">prisco</a></p>\r\n              <p><i class=\"bi bi-instagram\"></i><a href=\"https://www.instagram.com/prisco_pris\">@prisco_pris</a></p>\r\n              <p><i class=\"bi bi-twitter-x\"></i><a href=\"https://www.twitter.com/prisco_pris\">@prisco_pris</a></p>\r\n              <p><i class=\"bi bi-tiktok\"></i><a href=\"https://www.tiktok.com/@prisco_pris\">@prisco_pris</a></p>\r\n            </li>\r\n            <li className=\"suggestion\">\r\n              <h5>Problemas de código y algoritmos 👾</h5>\r\n              <p><a href=\"https://leetcode.com/u/prisco/\">LeetCode</a></p>\r\n              <p><a href=\"https://www.hackerrank.com/profile/jellous\">HackerRank</a></p>\r\n              <p><a href=\"https://www.codewars.com/users/hexorhex\">CodeWars</a></p>\r\n            </li>\r\n            <li className=\"suggestion\">\r\n              <h5>Aprendizaje 🌴</h5>\r\n              <p><a href=\"https://codecademy.com\">codecademy</a></p>\r\n              <p><a href=\"https://udemy.com\">Udemy</a></p>\r\n              <p><a href=\"https://coursera.com\">Coursera.org</a></p>\r\n              <p>and more others ...</p>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </section>\r\n      <section className=\"section-t\">\r\n      <DodgeTheCreeps /> \r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sections;\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Nav from \"./Nav\";\r\nimport React from 'react';\r\nimport Header from \"./Header\";\r\nimport Sections from \"./Sections\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Nav />\r\n      <Header />\r\n      <Sections />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Importa Bootstrap\r\nimport \"./styles.css\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}