{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PcPrizko\\\\dlprisco\\\\src\\\\Header.jsx\";\nimport React, { useEffect, useRef } from \"react\";\nfunction Header() {\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n\n    // Dimensiones del canvas\n    canvas.width = 500;\n    canvas.height = 500;\n    let angulo = 0;\n    // Velocidades individuales para cada cuadrado\n    let velocidades = [0.09, -0.020, 0.09, -0.030];\n    function dibujar() {\n      // Limpia el lienzo\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Traslada el origen al centro del canvas\n      ctx.translate(canvas.width / 2, canvas.height / 2);\n\n      // --- Dibujar \"círculo\" como arcos en las esquinas del cuadrado ---\n      // Usamos la rotación del primer cuadrado como referencia\n      let baseRotation = angulo * velocidades[0];\n      // Delta define la amplitud de cada arco (en radianes)\n      const delta = 0.2;\n      // Se dibujan 4 arcos, uno por cada esquina\n      for (let k = 0; k < 4; k++) {\n        let cornerAngle = baseRotation + Math.PI / 4 + k * (Math.PI / 2);\n        ctx.beginPath();\n        ctx.arc(0, 0, 130, cornerAngle - delta, cornerAngle + delta);\n        ctx.lineWidth = 4;\n        ctx.strokeStyle = \"#0F4C81\"; // Azul metalizado oscuro\n        ctx.stroke();\n      }\n\n      // --- Dibujar tres cuadrados con rotación individual ---\n      for (let i = 0; i < 3; i++) {\n        ctx.save();\n        ctx.rotate(angulo * velocidades[i]);\n        ctx.beginPath();\n        let size = (3 - i) * 60; // Tamaño del cuadrado (de mayor a menor)\n        ctx.rect(-size / 2, -size / 2, size, size);\n        ctx.lineWidth = 3;\n        ctx.strokeStyle = \"#0F4C81\"; // Usamos el mismo azul metalizado oscuro\n        ctx.stroke();\n        ctx.restore();\n      }\n\n      // Restauramos el contexto para el siguiente frame\n      ctx.resetTransform();\n\n      // Incrementamos el ángulo para animar la escena\n      angulo += 0.02;\n      requestAnimationFrame(dibujar);\n    }\n    dibujar();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"intro-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Hello, mi nombre es Daniel Prisco. Soy nuevo en la programaci\\xF3n y dise\\xF1o web.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"intro-lead-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"Python \\u2022 C++ \\u2022 Java \\u2022 SQL \\u2022 JavaScript \\u2022 CSS \\u2022 HTML\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"canvas-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    id: \"miCanvas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }))));\n}\nexport default Header;","map":{"version":3,"names":["React","useEffect","useRef","Header","canvasRef","canvas","current","ctx","getContext","width","height","angulo","velocidades","dibujar","clearRect","translate","baseRotation","delta","k","cornerAngle","Math","PI","beginPath","arc","lineWidth","strokeStyle","stroke","i","save","rotate","size","rect","restore","resetTransform","requestAnimationFrame","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","id"],"sources":["C:/Users/PcPrizko/dlprisco/src/Header.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\n\r\nfunction Header() {\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    // Dimensiones del canvas\r\n    canvas.width = 500;\r\n    canvas.height = 500;\r\n\r\n    let angulo = 0;\r\n    // Velocidades individuales para cada cuadrado\r\n    let velocidades = [0.09, -0.020, 0.09, -0.030];\r\n\r\n    function dibujar() {\r\n      // Limpia el lienzo\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      // Traslada el origen al centro del canvas\r\n      ctx.translate(canvas.width / 2, canvas.height / 2);\r\n\r\n      // --- Dibujar \"círculo\" como arcos en las esquinas del cuadrado ---\r\n      // Usamos la rotación del primer cuadrado como referencia\r\n      let baseRotation = angulo * velocidades[0];\r\n      // Delta define la amplitud de cada arco (en radianes)\r\n      const delta = 0.2;\r\n      // Se dibujan 4 arcos, uno por cada esquina\r\n      for (let k = 0; k < 4; k++) {\r\n        let cornerAngle = baseRotation + Math.PI / 4 + k * (Math.PI / 2);\r\n        ctx.beginPath();\r\n        ctx.arc(0, 0, 130, cornerAngle - delta, cornerAngle + delta);\r\n        ctx.lineWidth = 4;\r\n        ctx.strokeStyle = \"#0F4C81\"; // Azul metalizado oscuro\r\n        ctx.stroke();\r\n      }\r\n\r\n      // --- Dibujar tres cuadrados con rotación individual ---\r\n      for (let i = 0; i < 3; i++) {\r\n        ctx.save();\r\n        ctx.rotate(angulo * velocidades[i]);\r\n        ctx.beginPath();\r\n        let size = (3 - i) * 60; // Tamaño del cuadrado (de mayor a menor)\r\n        ctx.rect(-size / 2, -size / 2, size, size);\r\n        ctx.lineWidth = 3;\r\n        ctx.strokeStyle = \"#0F4C81\"; // Usamos el mismo azul metalizado oscuro\r\n        ctx.stroke();\r\n        ctx.restore();\r\n      }\r\n\r\n      // Restauramos el contexto para el siguiente frame\r\n      ctx.resetTransform();\r\n\r\n      // Incrementamos el ángulo para animar la escena\r\n      angulo += 0.02;\r\n      requestAnimationFrame(dibujar);\r\n    }\r\n\r\n    dibujar();\r\n  }, []);\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"header-container\">\r\n        {/* Sección izquierda: Texto */}\r\n        <div className=\"text-section\">\r\n          <div className=\"intro-heading\">\r\n            Hello, mi nombre es Daniel Prisco. Soy nuevo en la programación y diseño web.\r\n          </div>\r\n          <div className=\"intro-lead-in\">\r\n            Python • C++ • Java • SQL • JavaScript • CSS • HTML\r\n          </div>\r\n        </div>\r\n        {/* Sección derecha: Canvas con animación */}\r\n        <div className=\"canvas-section\">\r\n          <canvas ref={canvasRef} id=\"miCanvas\"></canvas>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}