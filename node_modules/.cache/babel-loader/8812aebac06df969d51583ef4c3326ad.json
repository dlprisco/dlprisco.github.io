{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PcPrizko\\\\dlprisco\\\\src\\\\Sections.jsx\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport \"./Sections.css\";\nimport Header from \"./Header\";\nfunction Sections() {\n  // Estado para manejar la visibilidad de la segunda sección\n  const [showSecondSection, setShowSecondSection] = useState(false);\n  // Referencia al elemento \"sentinel\" que usaremos como disparador\n  const sentinelRef = useRef(null);\n  useEffect(() => {\n    // Creamos el Intersection Observer\n    const observer = new IntersectionObserver(([entry]) => {\n      // Cuando el elemento sentinel esté 100% visible (threshold: 1.0),\n      // significa que la primera sección ya se ubicó completamente arriba.\n      if (entry.intersectionRatio === 1) {\n        setShowSecondSection(true);\n      } else {\n        // Si se desplaza hacia arriba (o se oculta parcialmente) lo dejamos visible o\n        // podríamos desactivarlo según lo que necesites.\n        setShowSecondSection(false);\n      }\n    }, {\n      threshold: 1.0\n    });\n\n    // Observamos el sentinel\n    if (sentinelRef.current) {\n      observer.observe(sentinelRef.current);\n    }\n\n    // Limpieza del observer en el desmontaje del componente\n    return () => {\n      if (sentinelRef.current) {\n        observer.unobserve(sentinelRef.current);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sections-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section-one\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Secci\\xF3n 1\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Esta es la primera secci\\xF3n. Puede contener el contenido que ya tienes, como tu header, cuadrado opaco, animaciones, etc.\"), /*#__PURE__*/React.createElement(\"div\", {\n    ref: sentinelRef,\n    className: \"sentinel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: `section-two ${showSecondSection ? \"visible\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Secci\\xF3n 2\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Esta secci\\xF3n aparece autom\\xE1ticamente una vez que la secci\\xF3n anterior se ha desplazado completamente.\")));\n}\nexport default Sections;","map":{"version":3,"names":["React","useRef","useEffect","useState","Header","Sections","showSecondSection","setShowSecondSection","sentinelRef","observer","IntersectionObserver","entry","intersectionRatio","threshold","current","observe","unobserve","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref"],"sources":["C:/Users/PcPrizko/dlprisco/src/Sections.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport \"./Sections.css\";\r\nimport Header from \"./Header\";\r\n\r\nfunction Sections() {\r\n  // Estado para manejar la visibilidad de la segunda sección\r\n  const [showSecondSection, setShowSecondSection] = useState(false);\r\n  // Referencia al elemento \"sentinel\" que usaremos como disparador\r\n  const sentinelRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Creamos el Intersection Observer\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        // Cuando el elemento sentinel esté 100% visible (threshold: 1.0),\r\n        // significa que la primera sección ya se ubicó completamente arriba.\r\n        if (entry.intersectionRatio === 1) {\r\n          setShowSecondSection(true);\r\n        } else {\r\n          // Si se desplaza hacia arriba (o se oculta parcialmente) lo dejamos visible o\r\n          // podríamos desactivarlo según lo que necesites.\r\n          setShowSecondSection(false);\r\n        }\r\n      },\r\n      { threshold: 1.0 }\r\n    );\r\n\r\n    // Observamos el sentinel\r\n    if (sentinelRef.current) {\r\n      observer.observe(sentinelRef.current);\r\n    }\r\n\r\n    // Limpieza del observer en el desmontaje del componente\r\n    return () => {\r\n      if (sentinelRef.current) {\r\n        observer.unobserve(sentinelRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"sections-container\">\r\n      {/* Sección 1: por ejemplo, la sección con el cuadrado opaco o el header */}\r\n      <section className=\"section-one\">\r\n        <h1>Sección 1</h1>\r\n        <p>\r\n          Esta es la primera sección. Puede contener el contenido que ya tienes,\r\n          como tu header, cuadrado opaco, animaciones, etc.\r\n        </p>\r\n        {/* El \"sentinel\" se coloca al final de la sección */}\r\n        <div ref={sentinelRef} className=\"sentinel\"></div>\r\n      </section>\r\n\r\n      {/* Sección 2: Aparece automáticamente cuando el sentinel se haga visible */}\r\n      <section className={`section-two ${showSecondSection ? \"visible\" : \"\"}`}>\r\n        <h1>Sección 2</h1>\r\n        <p>\r\n          Esta sección aparece automáticamente una vez que la sección anterior\r\n          se ha desplazado completamente.\r\n        </p>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sections;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,gBAAgB;AACvB,OAAOC,MAAM,MAAM,UAAU;AAE7B,SAASC,QAAQA,CAAA,EAAG;EAClB;EACA,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EACjE;EACA,MAAMK,WAAW,GAAGP,MAAM,CAAC,IAAI,CAAC;EAEhCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,QAAQ,GAAG,IAAIC,oBAAoB,CACvC,CAAC,CAACC,KAAK,CAAC,KAAK;MACX;MACA;MACA,IAAIA,KAAK,CAACC,iBAAiB,KAAK,CAAC,EAAE;QACjCL,oBAAoB,CAAC,IAAI,CAAC;MAC5B,CAAC,MAAM;QACL;QACA;QACAA,oBAAoB,CAAC,KAAK,CAAC;MAC7B;IACF,CAAC,EACD;MAAEM,SAAS,EAAE;IAAI,CACnB,CAAC;;IAED;IACA,IAAIL,WAAW,CAACM,OAAO,EAAE;MACvBL,QAAQ,CAACM,OAAO,CAACP,WAAW,CAACM,OAAO,CAAC;IACvC;;IAEA;IACA,OAAO,MAAM;MACX,IAAIN,WAAW,CAACM,OAAO,EAAE;QACvBL,QAAQ,CAACO,SAAS,CAACR,WAAW,CAACM,OAAO,CAAC;MACzC;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEd,KAAA,CAAAiB,aAAA;IAAKC,SAAS,EAAC,oBAAoB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEjCxB,KAAA,CAAAiB,aAAA;IAASC,SAAS,EAAC,aAAa;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9BxB,KAAA,CAAAiB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,cAAa,CAAC,eAClBxB,KAAA,CAAAiB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,6HAGA,CAAC,eAEJxB,KAAA,CAAAiB,aAAA;IAAKQ,GAAG,EAAEjB,WAAY;IAACU,SAAS,EAAC,UAAU;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAM,CAC1C,CAAC,eAGVxB,KAAA,CAAAiB,aAAA;IAASC,SAAS,EAAE,eAAeZ,iBAAiB,GAAG,SAAS,GAAG,EAAE,EAAG;IAAAa,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtExB,KAAA,CAAAiB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,cAAa,CAAC,eAClBxB,KAAA,CAAAiB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,+GAGA,CACI,CACN,CAAC;AAEV;AAEA,eAAenB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}